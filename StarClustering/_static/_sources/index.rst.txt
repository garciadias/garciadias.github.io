.. Star Clustering documentation master file, created by
   sphinx-quickstart on Wed Sep 28 11:27:39 2016.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

.. toctree::
  :maxdepth: 2


.. Indices and tables
.. ==================

.. contents::


================
Star Clustering
================



Installation
============

Requirements
____________

StarClustering has the following strict requirements:

- `Python <http://www.python.org/>`_ 2.\* or 3.\*

- `Numpy <http://www.numpy.org/>`_

- `Matplotlib <https://matplotlib.org/>`_

Using pip
_________

To install StarClustering with `pip <http://www.pip-installer.org/en/latest/>`_, simply run::

    pip install StarClustering


Introduction
============

	Star Clustering is a python tool kit developed to apply *K*-means `(MacQueen, 1967) <http://www-m9.ma.tum.de/foswiki/pub/WS2010/CombOptSem/kMeans.pdf>`_ clustering in astrophysics objects. 

	Cluster analysis aims to organize a collection of objects into classes based on a similarity criterion, such that objects in the same class are more alike than objects in different classes. There is a numerous set of cluster algorithms available in the literature (e.g. \citealt{everitt92}), here we explore the aplication of *K*-means clustering.

	*K*-means is a partitional hard clustering algorithm. It is one of the most popular clustering algorithms, mainly because it is easy to implement and its computational cost scales linearly with the number of objects to be classified. The fundamental steps in *K*-means are 

		**(1)** to choose the number of clusters *K*; 

		**(2)** define *K* initial cluster centres; 

		**(3)** assign each object in the sample to the closest cluster; 

		**(4)** recompute cluster centres as the centroid of the objects assigned to each cluster; 

		**(5)** repeat steps 3 and 4 until a convergence criterion is met. Usually the convergence criterion is either a decrease of the within-cluster variance under a threshold, or a minimal reassignation between two consecutive iterations. Here we adopt the criterion of having less than 1 per cent of reassignation  between two consecutive iterations. 

	*K*-means clustering was previously applied in works like: 

	- `Sánchez Almeida et al. (2016) <http://arxiv.org/abs/1601.01631>`_ - Search for Extremely Metal-poor Galaxies in the Sloan Digital Sky Survey (II): high electron temperature objects

	- `Ordovás-Pascual & Sánchez Almeida (2014) <http://adsabs.harvard.edu/cgi-bin/nph-data_query?bibcode=2014A%26A...565A..53O&db_key=AST&link_type=PREPRINT>`_ - A fast version of the k-means classification algorithm for astronomical applications

	- `Sánchez Almeida & Allende Prieto (2013) <http://arxiv.org/abs/1211.5321>`_ - Automated unsupervised classification of the Sloan Digital Sky Survey stellar spectra using k-means clustering

	- `Morales-Luis et al. (2011) <http://arxiv.org/abs/1109.0235>`_ - Systematic search for extremely metal poor galaxies in the Sloan Digital Sky Survey

	- `Sánchez Almeida et. al (2010) <http://adsabs.harvard.edu/cgi-bin/nph-data_query?bibcode=2010ApJ...714..487S&db_key=AST&link_type=PREPRINT>`_ - Automatic Unsupervised Classification of All Sloan Digital Sky Survey Data Release 7 Galaxy Spectra

	- `Sánchez Almeida et. al (2009) <http://adsabs.harvard.edu/cgi-bin/nph-data_query?bibcode=2009ApJ...698.1497S&db_key=AST&link_type=PREPRINT>`_ -  Search for Blue Compact Dwarf Galaxies During Quiescence. II. Metallicities of Gas and Stars, Ages, and Star Formation Rates

	- `Sánchez Almeida & Lites (2000) <http://iopscience.iop.org/article/10.1086/308603/pdf>`_ - Physical Properties of the Solar Magnetic Photosphere under the MISMA Hypothesis. II. Network and Internetwork Fields at the Disk Center

.. .. math::
   (a + b)^2 = a^2 + 2ab + b^2
   (\alpha - b)^2 = \alpha^2 - 2 \alpha b + b^2


.. .. figure:: Groups_MH_Teff_cont_fill.png
   :scale: 30 %
   :alt: alternate text
   :align: center
   :figclass: align-left
   **Contour diagrams in the Teff x MH space. Different colors are used to distinguish classes, there is any touching borders with the same color. Each class is represented by five color shades, from dark to light, the shades enclose 15%, 30%, 45% and** :math:`1\sigma`. **The groups are parted in four plots minimizing superposition of classes. Panel a shows groups 0, 1, 4 and 5, panel** b **groups 7, panel** c **groups 2 and 3, and panel** d **shows group 6. Except of panel** b **, which has its classes identified as in the legend box, each class is tagged with a floating label in the form G** X **C** XX **, C referring to class and G to its group.**


Get started
===============

Simple gaussian distributions
_____________________________

	Here we give a quick test to verify your StarClustering module is working well.
	In this example we use numpy to create 4 gaussian distributions in a 5 dimensional
	space, than we use *K*-means to find the clusters automaticly. 

	.. literalinclude:: test_corner.py

	As a result you should get the following plot:

	.. image:: testing_corner.png
	   :scale: 70 %
..	   :alt: alternate text
	   :align: center
	   :figclass: align-left

	   Multidimensional view of *K*-means classification.

	In this example we show how *K*-means is able to identify the 4 distributions with perfection.

